[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 SemesterProject7709 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/Lab1.html","id":"solution","dir":"Articles","previous_headings":"","what":"Solution","title":"Lab1","text":"","code":"# read in data library(readxl)  wide_data <- read_xlsx(\"data/Lab1_data.xlsx\")  # need to handle the column headers  # input only column headers wide_headers <- read_xlsx(\"data/Lab1_data.xlsx\",                           range = \"B1:M3\",                            col_names=FALSE)  # extract individual levels, and repeat level to fill design IV1 <- as.character(wide_headers[1,]) IV1 <- IV1[is.na(IV1) == FALSE] IV1 <- rep(IV1, each = 6)  IV2 <- as.character(wide_headers[2,]) IV2 <- IV2[is.na(IV2) == FALSE] IV2 <- rep(IV2, each=2)  IV3 <- as.character(wide_headers[3,]) IV3 <- IV3[is.na(IV3) == FALSE]  # create a single row version of column headers one_row_header <- paste(IV1,IV2,IV3, sep=\"_\")  # read in data again, skipping unnecessary column headers  wide_data <- read_xlsx(\"data/Lab1_data.xlsx\", skip = 2)  # replace names with new column headers   names(wide_data)[2:13] <- one_row_header  # use pivot_longer to convert to long  library(tidyr)  long_data <- wide_data %>% pivot_longer(   cols = 2:13,   names_to = c(\"Loudness\",\"Time\",\"Letter\"),   names_pattern = \"(.*)_(.*)_(.*)\",   values_to = \"DV\" )  knitr::kable(head(long_data))"},{"path":"/articles/Lab1.html","id":"other-solutions","dir":"Articles","previous_headings":"","what":"other solutions","title":"Lab1","text":"Using loops logic, minimum functions Using zoo:na.locf function fill level names right. uses lines, comes expense low readability, lots nested function calls hard parse understand.","code":"# create IVs by hand Loudness <- rep( rep(c(\"Noisy\",\"Quiet\"),each=6), 10) Time     <- rep( rep(rep(c(\"Morning\",\"Afternoon\",\"Evening\"),each=2),2), 10) Letter   <- rep( rep(c(\"A\",\"B\"),6), 10) Participant <- rep(1:10, each = 12)  #load rectangle containing data wide_data <- read_xlsx(\"data/Lab1_data.xlsx\",                           range = \"B4:M13\",                            col_names=FALSE)  # convert matrix to a single vector (concatenate) long_dv <- c(t(as.matrix(wide_data)))  #assemble data.frame  long_data <- data.frame(Participant,                         Loudness,                         Time,                          Letter,                         DV=long_dv)  head(long_data) #>   Participant Loudness      Time Letter DV #> 1           1    Noisy   Morning      A 61 #> 2           1    Noisy   Morning      B 77 #> 3           1    Noisy Afternoon      A 97 #> 4           1    Noisy Afternoon      B 97 #> 5           1    Noisy   Evening      A 89 #> 6           1    Noisy   Evening      B 94 # load data  wide_data <- read_xlsx(\"data/Lab1_data.xlsx\",col_names = FALSE) wide_data <- as.data.frame(wide_data)  # Create vectors of level names for each IV # use a for loop to process the first three rows of wide_data  Loudness <- c() Time <- c() Letter <- c() for (i in 2:13) {      if ( is.na(wide_data[1,i]) == FALSE ) Loudness[i-1] <- wide_data[1,i]   if ( is.na(wide_data[1,i]) == TRUE ) Loudness[i-1] <- Loudness[i-2]      if ( is.na(wide_data[2,i]) == FALSE ) Time[i-1] <- wide_data[2,i]   if ( is.na(wide_data[2,i]) == TRUE ) Time[i-1] <- Time[i-2]      if ( is.na(wide_data[3,i]) == FALSE ) Letter[i-1] <- wide_data[3,i]   if ( is.na(wide_data[3,i]) == TRUE ) Letter[i-1] <- Letter[i-2] }  # Create a long data frame using a for loop  long_data <-  data.frame()  for(i in 4:13){ # rows   for(j in 2:13) { # columns     temp_row <- data.frame(Participant = wide_data[i,1],                            Loudness = Loudness[j-1],                            Time = Time[j-1],                            Letter = Letter[j-1],                            DV = wide_data[i,j])     long_data <- rbind(long_data,temp_row)   } }  head(long_data) #>   Participant Loudness      Time Letter DV #> 1           1    Noisy   Morning      A 61 #> 2           1    Noisy   Morning      B 77 #> 3           1    Noisy Afternoon      A 97 #> 4           1    Noisy Afternoon      B 97 #> 5           1    Noisy   Evening      A 89 #> 6           1    Noisy   Evening      B 94 wide_data <- as.data.frame(read_xlsx(\"data/Lab1_data.xlsx\",col_names = FALSE)) the_scores <- wide_data[4:13,1:13] names(the_scores) <- c(wide_data[3,1],apply(zoo::na.locf(t(wide_data[1:3,2:13])),1,paste, collapse=\"_\"))  long_data <- the_scores %>% pivot_longer(   cols = 2:13,   names_to = c(\"Loudness\",\"Time\",\"Letter\"),   names_pattern = \"(.*)_(.*)_(.*)\",   values_to = \"DV\" )  head(long_data) #> # A tibble: 6 × 5 #>   Participant Loudness Time      Letter DV    #>   <chr>       <chr>    <chr>     <chr>  <chr> #> 1 1           Noisy    Morning   A      61    #> 2 1           Noisy    Morning   B      77    #> 3 1           Noisy    Afternoon A      97    #> 4 1           Noisy    Afternoon B      97    #> 5 1           Noisy    Evening   A      89    #> 6 1           Noisy    Evening   B      94"},{"path":[]},{"path":"/articles/pkgdownTips/styling.html","id":"bootstrap-5","dir":"Articles > PkgdownTips","previous_headings":"","what":"Bootstrap 5","title":"Styling tips","text":"Bootstrap 5 programmatic way style web pages. Go bootstrap 5 documentation search style classes elements want insert. , use fenced divs insert https://getbootstrap.com/docs/5.1/getting-started/introduction/ Setting font size .fs-1 Setting font size .fs-2 Using Boostrap 5 classes multi-column text text written first column. Blah blah blah, etc. stuff. text written second column. Blah blah blah, etc. stuff. Change relative widths columns (add 12) text written first column. Blah blah blah, etc. stuff. text written second column. Blah blah blah, etc. stuff.","code":"::: {.fs-1}  Setting font size to `.fs-1`  ::: ::: {.fs-2}  Setting font size to `.fs-2`  ::: ::: {.row} :::: {.col-6} This is the text that will be written in the first column. Blah blah blah, etc. and some more stuff. ::::  :::: {.col-6} This is the text that will be written in the second column. Blah blah blah, etc. and some more stuff. :::: ::: ::: {.row} :::: {.col-9} This is the text that will be written in the first column. Blah blah blah, etc. and some more stuff. ::::  :::: {.col-3} This is the text that will be written in the second column. Blah blah blah, etc. and some more stuff. :::: :::"},{"path":"/articles/pkgdownTips/tips.html","id":"what-is-pkgdown","dir":"Articles > PkgdownTips","previous_headings":"","what":"What is pkgdown?","title":"pkgdown tips","text":"pkgdown R package automatically compiles R packages websites. order use pkgdown, working inside R Studio project containing R Package skeleton template.","code":""},{"path":"/articles/pkgdownTips/tips.html","id":"basic-usage","dir":"Articles > PkgdownTips","previous_headings":"","what":"Basic usage","title":"pkgdown tips","text":"NOTE: general running pkgdown functions console, .Rmd documents.","code":""},{"path":"/articles/pkgdownTips/tips.html","id":"build_site-compile-the-whole-website","dir":"Articles > PkgdownTips","previous_headings":"Basic usage","what":"build_site() compile the whole website","title":"pkgdown tips","text":"pkgdown::build_site() compiles entire R package project pkgdown website saves web files docs folder. push R project compiled website Github.com, can view webpage enabling github pages option (choosing load docs folder).","code":"# run this in the console pkgdown::build_site()"},{"path":"/articles/pkgdownTips/tips.html","id":"build_home-compile-the-front-page","dir":"Articles > PkgdownTips","previous_headings":"Basic usage","what":"build_home() compile the front page","title":"pkgdown tips","text":"pkgdown::build_home() re-compiles just front page. updated web files saved docs folder. function can useful test changes styling website. , simply changing something landing page, don’t want recompile everything else, needed.","code":"# run this in the console pkgdown::build_home()"},{"path":"/articles/pkgdownTips/tips.html","id":"build_articles-compile-all-vignettes","dir":"Articles > PkgdownTips","previous_headings":"Basic usage","what":"build_articles() compile all vignettes","title":"pkgdown tips","text":"pkgdown::build_articles() knits .Rmd documents vignettes folder, saves .html files docs folder. Note, function re-knit .Rmd files changed since last time compiled.","code":"# run this in the console pkgdown::build_articles()"},{"path":"/articles/pkgdownTips/tips.html","id":"additional-build-functions","dir":"Articles > PkgdownTips","previous_headings":"Basic usage","what":"Additional build functions","title":"pkgdown tips","text":"build functions might find useful, check : https://pkgdown.r-lib.org/reference/index.html#build","code":""},{"path":"/articles/pkgdownTips/tips.html","id":"clean_site","dir":"Articles > PkgdownTips","previous_headings":"Basic usage","what":"clean_site()","title":"pkgdown tips","text":"pkgdown::clean_site() deletes files docs folder. running bug problem, may due leftover files docs folder previous build. function lets start fresh. running pkgdown::clean_site(), try re-running pkgdown::build_site() rebuild everything.","code":"# run this in the console pkgdown::clean_site()"},{"path":[]},{"path":"/articles/pkgdownTips/tips.html","id":"vignettes","dir":"Articles > PkgdownTips","previous_headings":"Advanced tips","what":"Vignettes","title":"pkgdown tips","text":"create vignettes folder, .Rmd files folder knitted html files saved docs folder. Additionally, default articles tab inserted website, tab list .Rmd documents knit vignettes folder. Knitting occurs running pkgdown::build_site(), pkgdown::articles()","code":""},{"path":"/articles/pkgdownTips/tips.html","id":"customizing-the-navbar","dir":"Articles > PkgdownTips","previous_headings":"Advanced tips","what":"Customizing the navbar","title":"pkgdown tips","text":"navigation bar top website show default tabs set pkgdown. example, vignettes folder .Rmds , website default articles tab lists titles Rmds. tabs pkgdown generate make use options (e.g., news tab, tutorials tab). possible customize naming tabs, make new tabs, make links within tab. customization occurs modifying navbar object _pkgdown.yml file. may find necessary completely customize navbar prevent nuisances occurring. illustrate two examples coding navbar object. first example, .Rmds vignettes folder knitted added articles tab. causes redundancies vignettes folder two subfolders intended separate files. Specifically, anRbasics folder, pkgdownTips folder containing .Rmd. intention website display labs articles tab, make separate tabs Rbasics pkgdown tips. code makes new tabs Rbasics pkgdown tips, links respective pages. minor nuisance Rbasics pkgdown tips pages redundantly listed articles tab. fix redundant listing .Rmds vignettes folder fully-customize navbar. requires explicitly declare tab page . Note, pkgdown::template_navbar() can helpful . example, code added articles object underneath components, listed Lab 1 Lab 3, list anything else. write hand, instead copy pasted output pkgdown::template_navbar().","code":"navbar:   structure:     left:  [articles, Rbasics, pkgdowntips, reference]     right: [search, github]   components:      Rbasics:       text: R basics       menu:       - text: My r basics page         href: articles/Rbasics/Rbasics.html      pkgdowntips:         text: pkgdown tips         href: articles/pkgdownTips/tips.html navbar:   structure:     left:  [articles, Rbasics, pkgdowntips, reference]     right: [search, github]   components:      articles:       text: Articles       menu:       - text: Lab1         href: articles/Lab1.html       - text: Lab2         href: articles/Lab2.html       - text: Lab3         href: articles/Lab3.html      Rbasics:       text: R basics       menu:       - text: My r basics page         href: articles/Rbasics/Rbasics.html      pkgdowntips:         text: pkgdown tips         href: articles/pkgdownTips/tips.html"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2022). SemesterProject7709: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {SemesterProject7709: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2022},   note = {R package version 0.1.0}, }"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> [1] \"Hello, world!\""}]
